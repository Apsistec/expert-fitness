rules_version = '2';
service cloud.firestore {
       match /{document=**} {
          allow read, write: if isAdmin();
      	}
match /databases/{database}/documents {

    function isSignedIn() {
    	return request.auth != null;
    }

    function isTrialing() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.subStatus == 'trialing';
    }

    function isActive() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.subStatus == 'active';
    }

    function isUser() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'USER';
    }
    function isPostOwner(postId) {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.postId ==  postId;
    }

    function isTrainer() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'TRAINER';
    }

    function isMember() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'MEMBER';
    }

    function isAdmin() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN';
    }

    function isRegistered() {
    	return isAdmin() || isMember() || isUser()|| isTrainer();
    }

    function isValidMember() {
    	return isRegistered() && isSignedIn() && (isActive() || isTrialing());
    }

        match /users/{userId} {
        	allow read, create, update: if request.auth.uid == userId || isAdmin();
          allow delete: if isAdmin();
      	}
        match /tickets/{ticket} {
          allow read, create, update: if isValidMember() || isAdmin();
          allow delete: if isAdmin();
     }
        match /posts/{post} {
          allow read, create, update: if (isValidMember() && isPostOwner(post)) || isAdmin();
          allow delete: if isAdmin();
     }

}
}
